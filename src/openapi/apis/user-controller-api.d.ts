/**
 * OpenApi specification - Georgi
 * OpenApi documentation for Spring security
 *
 * The version of the OpenAPI document: 1.0
 * Contact: Georgi_Ivanov92@pm.me
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import type { Configuration } from '../configuration';
import type { AxiosPromise, AxiosInstance, RawAxiosRequestConfig } from 'axios';
import { type RequestArgs, BaseAPI } from '../base';
import type { RegisterUserRequest } from '../models';
import type { RegisterUserResponse } from '../models';
/**
 * UserControllerApi - axios parameter creator
 * @export
 */
export declare const UserControllerApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     *
     * @param {RegisterUserRequest} registerUserRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    registerUser: (registerUserRequest: RegisterUserRequest, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
};
/**
 * UserControllerApi - functional programming interface
 * @export
 */
export declare const UserControllerApiFp: (configuration?: Configuration) => {
    /**
     *
     * @param {RegisterUserRequest} registerUserRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    registerUser(registerUserRequest: RegisterUserRequest, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<RegisterUserResponse>>;
};
/**
 * UserControllerApi - factory interface
 * @export
 */
export declare const UserControllerApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     *
     * @param {RegisterUserRequest} registerUserRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    registerUser(registerUserRequest: RegisterUserRequest, options?: RawAxiosRequestConfig): AxiosPromise<RegisterUserResponse>;
};
/**
 * UserControllerApi - object-oriented interface
 * @export
 * @class UserControllerApi
 * @extends {BaseAPI}
 */
export declare class UserControllerApi extends BaseAPI {
    /**
     *
     * @param {RegisterUserRequest} registerUserRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof UserControllerApi
     */
    registerUser(registerUserRequest: RegisterUserRequest, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<RegisterUserResponse, any>>;
}
